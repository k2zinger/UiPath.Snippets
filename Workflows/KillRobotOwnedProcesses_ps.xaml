<Activity mc:Ignorable="sap sap2010" x:Class="KillRobotOwnedProcesses" this:KillRobotOwnedProcesses.in_ContinueOnError="False" this:KillRobotOwnedProcesses.in_ProcessesToKill="[{&quot;calculator&quot;,&quot;notepad&quot;}]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ContinueOnError" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_ProcessesToKill" Type="InArgument(s:String[])" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1750,2100</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>killProcessOnlyRobot_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Management.ManagementObjectSearcher</x:String>
      <x:String>System.Management</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Management.Automation</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Management.ManagementObjectSearcher</AssemblyReference>
      <AssemblyReference>System.Management</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="KillRobotOwnedProcesses" sap:VirtualizedContainerService.HintSize="712,2035" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sco:Collection(sd:Process)" Name="ProcessesCollection" />
      <Variable x:TypeArguments="x:String" Name="RobotUserName" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="ProcessesToKill" />
      <Variable x:TypeArguments="scg:List(sd:Process)" Name="ActiveProcesses" />
      <Variable x:TypeArguments="x:String" Name="PowershellScript" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="670,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Killing Processes...&quot;]" />
    <Assign DisplayName="Get ProcessesToKill to a lowercase list" sap:VirtualizedContainerService.HintSize="670,60" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[ProcessesToKill]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[Array.ConvertAll(Of String, String)(in_ProcessesToKill, Function(s) s.ToLower).ToList]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="670,91" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Trace" Message="[&quot;List of processes to kill: &quot; + String.Join(&quot;, &quot;, ProcessesToKill)]" />
    <Assign DisplayName="Get Robot's Username as lowercase" sap:VirtualizedContainerService.HintSize="670,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[RobotUserName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.Security.Principal.WindowsIdentity.GetCurrent().Name.ToLower]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="ternary operator&#xA;&#xA;if contains \&#xA;then remove it&#xA;else assign it to itself" DisplayName="Remove slash from Robot's Username" sap:VirtualizedContainerService.HintSize="670,147" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[RobotUserName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[if(RobotUserName.Contains("\"), RobotUserName.Substring(RobotUserName.IndexOf("\") + 1), RobotUserName)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="670,91" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Robot's Username: &quot; + RobotUserName]" />
    <ui:GetProcesses ContinueOnError="{x:Null}" DisplayName="Get Processes" sap:VirtualizedContainerService.HintSize="670,22" sap2010:WorkflowViewState.IdRef="GetProcesses_1" Processes="[ProcessesCollection]" />
    <Assign DisplayName="Filter active processes list" sap:VirtualizedContainerService.HintSize="670,60" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(sd:Process)">[ActiveProcesses]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(sd:Process)">[(From process In ProcessesCollection Where ProcessesToKill.Contains(process.ProcessName.ToLower) Select process).ToList]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="670,91" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Trace" Message="[&quot;List of Active Processes to kill: &quot; + String.Join(&quot;, &quot;, ActiveProcesses)]" />
    <Assign sap:VirtualizedContainerService.HintSize="670,60" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[PowershellScript]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["Param(" + Environment.NewLine + vbTab + "[Parameter(Mandatory = $true)]" + Environment.NewLine + vbTab + "[System.Diagnostics.Process]$SDProcess" + Environment.NewLine + ")" + Environment.NewLine + Environment.NewLine + "Add-Type -TypeDefinition @""" + Environment.NewLine + "using System;" + Environment.NewLine + "using System.Diagnostics;" + Environment.NewLine + "using System.Runtime.InteropServices;" + Environment.NewLine + "using System.Security.Principal;" + Environment.NewLine + " " + Environment.NewLine + "public static class procuser" + Environment.NewLine + "{" + Environment.NewLine + vbTab + "public static string GetProcessUser(Process proc)" + Environment.NewLine + vbTab + "{" + Environment.NewLine + vbTab + vbTab + "IntPtr tokenHandle = IntPtr.Zero;" + Environment.NewLine + vbTab + vbTab + "try" + Environment.NewLine + vbTab + vbTab + "{" + Environment.NewLine + vbTab + vbTab + vbTab + "OpenProcessToken(proc.Handle, 8, out tokenHandle);" + Environment.NewLine + vbTab + vbTab + vbTab + "WindowsIdentity wi = new WindowsIdentity(tokenHandle);" + Environment.NewLine + vbTab + vbTab + vbTab + "string username = wi.Name;" + Environment.NewLine + vbTab + vbTab + vbTab + "return username.Contains(@""\"") ? username.Substring(username.IndexOf(@""\"") + 1) : username;" + Environment.NewLine + vbTab + vbTab + "}" + Environment.NewLine + vbTab + vbTab + "catch" + Environment.NewLine + vbTab + vbTab + "{" + Environment.NewLine + vbTab + vbTab + vbTab + "return """";" + Environment.NewLine + vbTab + vbTab + "}" + Environment.NewLine + vbTab + vbTab + "finally" + Environment.NewLine + vbTab + vbTab + "{" + Environment.NewLine + vbTab + vbTab + vbTab + "if (tokenHandle != IntPtr.Zero)" + Environment.NewLine + vbTab + vbTab + vbTab + "{" + Environment.NewLine + vbTab + vbTab + vbTab + vbTab + "CloseHandle(tokenHandle);" + Environment.NewLine + vbTab + vbTab + vbTab + "}" + Environment.NewLine + vbTab + vbTab + "}" + Environment.NewLine + vbTab + "}" + Environment.NewLine + Environment.NewLine + vbTab + "[DllImport(""advapi32.dll"", SetLastError = true)]" + Environment.NewLine + vbTab + "private static extern bool OpenProcessToken(IntPtr ProcessHandle, uint DesiredAccess, out IntPtr TokenHandle);" + Environment.NewLine + vbTab + "[DllImport(""kernel32.dll"", SetLastError = true)]" + Environment.NewLine + vbTab + "[return: MarshalAs(UnmanagedType.Bool)]" + Environment.NewLine + vbTab + "private static extern bool CloseHandle(IntPtr hObject);" + Environment.NewLine + "}" + vbTab + Environment.NewLine + """@" + Environment.NewLine + Environment.NewLine + "[procuser]::GetProcessUser($SDProcess)" + Environment.NewLine + ""]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="sd:Process" CurrentIndex="{x:Null}" DisplayName="For Each Process" sap:VirtualizedContainerService.HintSize="670,770" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[ActiveProcesses]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd:Process">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:Process" Name="item" />
          </ActivityAction.Argument>
          <Flowchart DisplayName="Flowchart For Each Process" sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
            <Flowchart.Variables>
              <Variable x:TypeArguments="sco:Collection(x:String)" Name="OutputUserName" />
            </Flowchart.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID2</x:Reference>
            </Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,178.5 300,228.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="[PowershellScript]" DisplayName="Invoke Power Shell Get-ProcessUserName" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_5" IsScript="True" Output="[OutputUserName]">
                <ui:InvokePowerShell.Parameters>
                  <InArgument x:TypeArguments="sd:Process" x:Key="SDProcess">[item]</InArgument>
                </ui:InvokePowerShell.Parameters>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokePowerShell>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID0" Condition="[Not String.IsNullOrEmpty(OutputUserName(0)) AndAlso OutputUserName(0).ToLower.Equals(RobotUserName)]" DisplayName="Username &amp; Process match?" sap:VirtualizedContainerService.HintSize="157,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">221.5,228.5</av:Point>
                      <av:Size x:Key="ShapeSize">157,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">221.5,272 200,272 200,271.52</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">0,246.02</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch DisplayName="Try catch - kill process" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence DisplayName="Try catch - Sequence" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message - killing" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;Killing Process: &quot; + item.ProcessName + &quot; with PID: &quot; + item.Id.ToString + &quot; of UserName: &quot; + OutputUserName(0)]" />
                            <ui:KillProcess ContinueOnError="{x:Null}" ProcessName="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="KillProcess_7" Process="[item]" />
                            <ui:LogMessage DisplayName="Log Message - killed" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Killed Process: &quot; + item.ProcessName + &quot; with PID: &quot; + item.Id.ToString + &quot; of UserName: &quot; + OutputUserName(0)]" />
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="526,431" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message Exception" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Error" Message="[&quot;Failed to kill process: &quot; + item.ProcessName + &quot; with PID: &quot; + item.Id.ToString + &quot; &quot; + exception.ToString]" />
                                <If Condition="[in_ContinueOnError]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_13">
                                  <If.Else>
                                    <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_6" />
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </FlowStep>
                  </FlowDecision.True>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
            <x:Reference>__ReferenceID0</x:Reference>
            <x:Reference>__ReferenceID1</x:Reference>
          </Flowchart>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>