<Activity mc:Ignorable="sap sap2010" x:Class="KillRobotOwnedProcesses" this:KillRobotOwnedProcesses.in_ProcessNames="[{&quot;calculator&quot;,&quot;notepad&quot;}]" this:KillRobotOwnedProcesses.in_ContinueOnError="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:sm="clr-namespace:System.Management;assembly=System.Management" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ProcessNames" Type="InArgument(s:String[])" />
    <x:Property Name="in_ContinueOnError" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1874,2354</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>killProcessOnlyRobot_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Management.ManagementObjectSearcher</x:String>
      <x:String>System.Management</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Management.ManagementObjectSearcher</AssemblyReference>
      <AssemblyReference>System.Management</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="KillRobotOwnedProcesses" sap:VirtualizedContainerService.HintSize="986,2289" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sco:Collection(sd:Process)" Name="processes" />
      <Variable x:TypeArguments="sm:ObjectQuery" Name="ObjQuery" />
      <Variable x:TypeArguments="ui:GenericValue" Name="searcher" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Instr" />
      <Variable x:TypeArguments="x:String" Name="folder" />
      <Variable x:TypeArguments="x:String" Name="RobotUserName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Set in_ProcessNames to lowercase" sap:VirtualizedContainerService.HintSize="944,60" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[in_ProcessNames]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Array.ConvertAll(Of String, String)(in_ProcessNames, Function(s) s.ToLower)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Get Robot's Username" sap:VirtualizedContainerService.HintSize="944,60" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[RobotUserName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.Security.Principal.WindowsIdentity.GetCurrent().Name.Split(system.Convert.ToChar("\"))(1).ToLower]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetProcesses ContinueOnError="{x:Null}" DisplayName="Get Processes" sap:VirtualizedContainerService.HintSize="944,22" sap2010:WorkflowViewState.IdRef="GetProcesses_1" Processes="[processes]" />
    <ui:ForEach x:TypeArguments="sd:Process" CurrentIndex="{x:Null}" DisplayName="For each process" sap:VirtualizedContainerService.HintSize="944,1935" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[processes]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd:Process">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:Process" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="For each process Body" sap:VirtualizedContainerService.HintSize="908,1801" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="sm:ManagementObjectSearcher" Name="MOS" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[in_ProcessNames.Contains(item.ProcessName.ToLower)]" DisplayName="If ProcessName exists inside in_ProcessNames" sap:VirtualizedContainerService.HintSize="866,1709" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence DisplayName="If ProcessName exists inside in_ProcessNames Body" sap:VirtualizedContainerService.HintSize="721,1561" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="new ObjectQuery" sap:VirtualizedContainerService.HintSize="679,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sm:ObjectQuery">[ObjQuery]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sm:ObjectQuery">[New ObjectQuery("Select * From Win32_Process where ProcessID = '" &amp; item.Id &amp; "'")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="new ManagementObjectSearcher" sap:VirtualizedContainerService.HintSize="679,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sm:ManagementObjectSearcher">[MOS]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sm:ManagementObjectSearcher">[New ManagementObjectSearcher(objQuery)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="sm:ManagementObject" CurrentIndex="{x:Null}" DisplayName="For each ManagementObjectSearcher" sap:VirtualizedContainerService.HintSize="679,1269" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[mos.Get]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sm:ManagementObject">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sm:ManagementObject" Name="mo" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="For each ManagementObjectSearcher Body" sap:VirtualizedContainerService.HintSize="643,1135" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:String[]" Name="s" />
                            <Variable x:TypeArguments="x:Object" Name="moObject" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="new String Array" sap:VirtualizedContainerService.HintSize="601,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:String[]">[s]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:String[]">[New String(1) {}]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Get Process's Username" sap:VirtualizedContainerService.HintSize="601,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[moObject]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[mo.InvokeMethod("GetOwner", DirectCast(s, Object()))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <TryCatch DisplayName="Try catch - kill process" sap:VirtualizedContainerService.HintSize="601,843" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Try catch - Sequence" sap:VirtualizedContainerService.HintSize="563,616" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[(Not s(0) = vbNullString) AndAlso s(0).ToString.ToLower.Equals(RobotUserName)]" DisplayName="If found a matching username + process" sap:VirtualizedContainerService.HintSize="521,524" sap2010:WorkflowViewState.IdRef="If_1">
                                  <If.Then>
                                    <Sequence DisplayName="if true Sequence" sap:VirtualizedContainerService.HintSize="376,376" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message - killing" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Killing Process: &quot; + item.ProcessName + &quot; with PID: &quot; + item.Id.ToString + &quot; of UserName: &quot; + s(0).ToString]" />
                                      <ui:KillProcess ContinueOnError="{x:Null}" ProcessName="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="KillProcess_1" Process="[item]" />
                                      <ui:LogMessage DisplayName="Log Message - killed" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Killed Process: &quot; + item.ProcessName + &quot; with PID: &quot; + item.Id.ToString + &quot; of UserName: &quot; + s(0).ToString]" />
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="567,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,431" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message Exception" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Failed to kill process: &quot; + item.ProcessName + &quot; with PID: &quot; + item.Id.ToString + &quot; &quot; + exception.ToString]" />
                                    <If Condition="[in_ContinueOnError]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_2">
                                      <If.Else>
                                        <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>